# =============================================================================
# API Gateway 개발 환경 설정 파일
# =============================================================================
# 개발 환경에서 사용되는 설정으로, 상세한 로깅과 디버깅 기능이 활성화됩니다.
# 실행 방법: --spring.profiles.active=dev

# 서버 설정
server:
  port: ${SERVER_PORT:8080}  # 개발 환경 포트

# Spring Cloud Gateway 설정
spring:
  cloud:
    gateway:
      # 라우팅 규칙 정의 (개발 환경용)
      routes:
        # =============================================================================
        # 사용자 관리 서비스 라우팅 (개발 환경)
        # =============================================================================
        - id: auth-service  # 인증 관련 라우트
          uri: http://localhost:8081  # 로컬 개발 서버
          predicates:
            - Path=/auth/**    # 인증 관련 API
        
        - id: user-service  # 사용자 관련 라우트
          uri: http://localhost:8081  # 로컬 개발 서버
          predicates:
            - Path=/user/**    # 사용자 관련 API

        # =============================================================================
        # 알림 서비스 라우팅 (개발 환경)
        # =============================================================================
        - id: notification-service
          uri: http://localhost:8082  # 로컬 개발 서버
          predicates:
            - Path=/noti/**    # 알림 관련 API

        # =============================================================================
        # 대시보드 서비스 라우팅 (개발 환경)
        # =============================================================================
        - id: dashboard-service
          uri: http://localhost:8083  # 로컬 개발 서버
          predicates:
            - Path=/home/**    # 대시보드 관련 API

        # =============================================================================
        # IoT 센서 서비스 라우팅 (개발 환경)
        # =============================================================================
        - id: sensors-service
          uri: http://localhost:8084  # 로컬 개발 서버
          predicates:
            - Path=/sensors/**  # 센서 데이터 관련 API

        # =============================================================================
        # 리포트 서비스 라우팅 (개발 환경)
        # =============================================================================
        - id: report-service
          uri: http://localhost:8085  # 로컬 개발 서버
          predicates:
            - Path=/reports/**  # 리포트 관련 API

        # =============================================================================
        # 챗봇 서비스 라우팅 (개발 환경)
        # =============================================================================
        - id: chatbot-service
          uri: http://localhost:8086  # 로컬 개발 서버
          predicates:
            - Path=/chatbot/**  # 챗봇 관련 API

# =============================================================================
# 로깅 설정 (개발 환경 - 상세 로깅)
# =============================================================================
logging:
  level:  # 개발 환경에서는 상세한 로그 출력
    org.springframework.cloud.gateway: DEBUG  # Gateway 상세 로그
    com.deefacto.api_gateway: DEBUG           # 애플리케이션 상세 로그
    org.springframework.web: DEBUG            # Web 요청/응답 상세 로그
  pattern:  # 로그 출력 형식
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"  # 콘솔 출력
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"  # 파일 출력
  file:  # 로그 파일 설정
    name: logs/api-gateway-dev.log  # 개발 환경 전용 로그 파일
    max-size: 10MB                  # 로그 파일 최대 크기
    max-history: 30                 # 보관할 로그 파일 개수

# =============================================================================
# Actuator 설정 (개발 환경 - 모든 엔드포인트 노출)
# =============================================================================
management:
  endpoints:  # 개발 환경에서는 모든 모니터링 엔드포인트 노출
    web:
      exposure:
        include: "*"  # 모든 Actuator 엔드포인트 노출 (디버깅용)
      base-path: /actuator  # 기본 경로 설정
  endpoint:  # 엔드포인트별 설정
    health:
      show-details: always  # 헬스 체크 상세 정보 항상 표시
    gateway:
      enabled: true  # Gateway 엔드포인트 명시적 활성화

# =============================================================================
# JWT 설정 (개발 환경)
# =============================================================================
jwt:
  # 개발 환경용 JWT 시크릿 키 (환경 변수 또는 기본값 사용)
  secret-key: ${JWT_SECRET_KEY_DEV:eW91ci1kZXYtc2VjcmV0LWtleS1oZXJlLW1pbmltdW0tMzItY2hhcmFjdGVycy1sb25n}
  expires-in: ${JWT_EXPIRES_IN:86400}  # 토큰 만료 시간 (24시간) 